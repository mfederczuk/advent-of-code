#!/bin/sh
# -*- sh -*-
# vim: set syntax=sh
# code: language=shellscript

# Advent of Code 2020 - Day 9 - Part 1
# Copyright (C) 2020  Michael Federczuk
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# just a warning: it took ~30min for this script to find the correct number with the actual puzzle input
# god i'm regretting using sh for today

readonly input_file="${1:-example_input}"
if [ "$input_file" != 'example_input' ]; then
	readonly preamble_length=25
else
	readonly preamble_length=5
fi

add() {
	echo "$1" + "$2" | bc
}

line=$(add $preamble_length 1) # starting at line $preamble_length + 1

get_input_file_line() {
	head -n"$1" "$input_file" | tail -n1 # creative way to get the nth line of a file
}
increment() {
	add "$1" 1
}

while true; do
	nr=$(get_input_file_line "$line")

	found=false
	i=1
	while [ $i -lt "$(add $preamble_length 1)" ]; do
		j=1
		while [ $j -lt "$(add $preamble_length 1)" ]; do
			nr1=$(get_input_file_line "$(add "$line" -$i)")
			nr2=$(get_input_file_line "$(add "$line" -$j)")

			if [ "$(add "$nr1" "$nr2")" = "$nr" ]; then
				found=true
				break 2
			fi

			j=$(increment $j)
		done

		i=$(increment $i)
	done

	if ! $found; then
		echo "$nr"
		exit
	fi

	line=$(increment "$line")
done
